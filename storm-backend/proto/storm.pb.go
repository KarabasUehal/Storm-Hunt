// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: storm.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StormRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StormRequest) Reset() {
	*x = StormRequest{}
	mi := &file_storm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StormRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StormRequest) ProtoMessage() {}

func (x *StormRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StormRequest.ProtoReflect.Descriptor instead.
func (*StormRequest) Descriptor() ([]byte, []int) {
	return file_storm_proto_rawDescGZIP(), []int{0}
}

func (x *StormRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type StormUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float32                `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float32                `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	WindSpeed     int32                  `protobuf:"varint,3,opt,name=wind_speed,json=windSpeed,proto3" json:"wind_speed,omitempty"`
	Timestamp     string                 `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StormUpdate) Reset() {
	*x = StormUpdate{}
	mi := &file_storm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StormUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StormUpdate) ProtoMessage() {}

func (x *StormUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_storm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StormUpdate.ProtoReflect.Descriptor instead.
func (*StormUpdate) Descriptor() ([]byte, []int) {
	return file_storm_proto_rawDescGZIP(), []int{1}
}

func (x *StormUpdate) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *StormUpdate) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *StormUpdate) GetWindSpeed() int32 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *StormUpdate) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_storm_proto protoreflect.FileDescriptor

const file_storm_proto_rawDesc = "" +
	"\n" +
	"\vstorm.proto\x12\x05proto\x1a\x1cgoogle/api/annotations.proto\"&\n" +
	"\fStormRequest\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\"\x84\x01\n" +
	"\vStormUpdate\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x02R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x02R\tlongitude\x12\x1d\n" +
	"\n" +
	"wind_speed\x18\x03 \x01(\x05R\twindSpeed\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\tR\ttimestamp2j\n" +
	"\fStormService\x12Z\n" +
	"\x12StreamStormUpdates\x12\x13.proto.StormRequest\x1a\x12.proto.StormUpdate\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/storm/updates0\x01B Z\x1eStorm-Hunt/storm-backend/protob\x06proto3"

var (
	file_storm_proto_rawDescOnce sync.Once
	file_storm_proto_rawDescData []byte
)

func file_storm_proto_rawDescGZIP() []byte {
	file_storm_proto_rawDescOnce.Do(func() {
		file_storm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storm_proto_rawDesc), len(file_storm_proto_rawDesc)))
	})
	return file_storm_proto_rawDescData
}

var file_storm_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_storm_proto_goTypes = []any{
	(*StormRequest)(nil), // 0: proto.StormRequest
	(*StormUpdate)(nil),  // 1: proto.StormUpdate
}
var file_storm_proto_depIdxs = []int32{
	0, // 0: proto.StormService.StreamStormUpdates:input_type -> proto.StormRequest
	1, // 1: proto.StormService.StreamStormUpdates:output_type -> proto.StormUpdate
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_storm_proto_init() }
func file_storm_proto_init() {
	if File_storm_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storm_proto_rawDesc), len(file_storm_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_storm_proto_goTypes,
		DependencyIndexes: file_storm_proto_depIdxs,
		MessageInfos:      file_storm_proto_msgTypes,
	}.Build()
	File_storm_proto = out.File
	file_storm_proto_goTypes = nil
	file_storm_proto_depIdxs = nil
}
