// @generated by protoc-gen-es v1.10.1
// @generated from file storm.proto (package stormhunter, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message stormhunter.StartStreamRequest
 */
export declare class StartStreamRequest extends Message<StartStreamRequest> {
  /**
   * @generated from field: string region = 1;
   */
  region: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  constructor(data?: PartialMessage<StartStreamRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stormhunter.StartStreamRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartStreamRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartStreamRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartStreamRequest;

  static equals(a: StartStreamRequest | PlainMessage<StartStreamRequest> | undefined, b: StartStreamRequest | PlainMessage<StartStreamRequest> | undefined): boolean;
}

/**
 * @generated from message stormhunter.WeatherData
 */
export declare class WeatherData extends Message<WeatherData> {
  /**
   * @generated from field: string region = 1;
   */
  region: string;

  /**
   * @generated from field: float temp = 2;
   */
  temp: number;

  /**
   * @generated from field: float humidity = 3;
   */
  humidity: number;

  /**
   * @generated from field: float lat = 4;
   */
  lat: number;

  /**
   * @generated from field: float lon = 5;
   */
  lon: number;

  /**
   * @generated from field: int32 wind_kmh = 6;
   */
  windKmh: number;

  /**
   * @generated from field: string timestamp = 7;
   */
  timestamp: string;

  constructor(data?: PartialMessage<WeatherData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "stormhunter.WeatherData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WeatherData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WeatherData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WeatherData;

  static equals(a: WeatherData | PlainMessage<WeatherData> | undefined, b: WeatherData | PlainMessage<WeatherData> | undefined): boolean;
}

