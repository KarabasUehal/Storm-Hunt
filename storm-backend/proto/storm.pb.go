// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: storm.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartStreamRequest) Reset() {
	*x = StartStreamRequest{}
	mi := &file_storm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStreamRequest) ProtoMessage() {}

func (x *StartStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStreamRequest.ProtoReflect.Descriptor instead.
func (*StartStreamRequest) Descriptor() ([]byte, []int) {
	return file_storm_proto_rawDescGZIP(), []int{0}
}

func (x *StartStreamRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *StartStreamRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type WeatherData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Temp          float32                `protobuf:"fixed32,2,opt,name=temp,proto3" json:"temp,omitempty"`
	Humidity      float32                `protobuf:"fixed32,3,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Lat           float32                `protobuf:"fixed32,4,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon           float32                `protobuf:"fixed32,5,opt,name=lon,proto3" json:"lon,omitempty"`
	WindKmh       int32                  `protobuf:"varint,6,opt,name=wind_kmh,json=windKmh,proto3" json:"wind_kmh,omitempty"`
	Timestamp     string                 `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeatherData) Reset() {
	*x = WeatherData{}
	mi := &file_storm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeatherData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherData) ProtoMessage() {}

func (x *WeatherData) ProtoReflect() protoreflect.Message {
	mi := &file_storm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherData.ProtoReflect.Descriptor instead.
func (*WeatherData) Descriptor() ([]byte, []int) {
	return file_storm_proto_rawDescGZIP(), []int{1}
}

func (x *WeatherData) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *WeatherData) GetTemp() float32 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *WeatherData) GetHumidity() float32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *WeatherData) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *WeatherData) GetLon() float32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *WeatherData) GetWindKmh() int32 {
	if x != nil {
		return x.WindKmh
	}
	return 0
}

func (x *WeatherData) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_storm_proto protoreflect.FileDescriptor

const file_storm_proto_rawDesc = "" +
	"\n" +
	"\vstorm.proto\x12\vstormhunter\x1a\x1cgoogle/api/annotations.proto\"E\n" +
	"\x12StartStreamRequest\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xb2\x01\n" +
	"\vWeatherData\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x12\x12\n" +
	"\x04temp\x18\x02 \x01(\x02R\x04temp\x12\x1a\n" +
	"\bhumidity\x18\x03 \x01(\x02R\bhumidity\x12\x10\n" +
	"\x03lat\x18\x04 \x01(\x02R\x03lat\x12\x10\n" +
	"\x03lon\x18\x05 \x01(\x02R\x03lon\x12\x19\n" +
	"\bwind_kmh\x18\x06 \x01(\x05R\awindKmh\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\tR\ttimestamp2v\n" +
	"\fStormService\x12f\n" +
	"\vStartStream\x12\x1f.stormhunter.StartStreamRequest\x1a\x18.stormhunter.WeatherData\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/storm/start0\x01B Z\x1eStorm-Hunt/storm-backend/protob\x06proto3"

var (
	file_storm_proto_rawDescOnce sync.Once
	file_storm_proto_rawDescData []byte
)

func file_storm_proto_rawDescGZIP() []byte {
	file_storm_proto_rawDescOnce.Do(func() {
		file_storm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storm_proto_rawDesc), len(file_storm_proto_rawDesc)))
	})
	return file_storm_proto_rawDescData
}

var file_storm_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_storm_proto_goTypes = []any{
	(*StartStreamRequest)(nil), // 0: stormhunter.StartStreamRequest
	(*WeatherData)(nil),        // 1: stormhunter.WeatherData
}
var file_storm_proto_depIdxs = []int32{
	0, // 0: stormhunter.StormService.StartStream:input_type -> stormhunter.StartStreamRequest
	1, // 1: stormhunter.StormService.StartStream:output_type -> stormhunter.WeatherData
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_storm_proto_init() }
func file_storm_proto_init() {
	if File_storm_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storm_proto_rawDesc), len(file_storm_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_storm_proto_goTypes,
		DependencyIndexes: file_storm_proto_depIdxs,
		MessageInfos:      file_storm_proto_msgTypes,
	}.Build()
	File_storm_proto = out.File
	file_storm_proto_goTypes = nil
	file_storm_proto_depIdxs = nil
}
